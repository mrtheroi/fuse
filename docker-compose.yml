services:
  stock-trading-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock-trading-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Vendor API Configuration
      - VENDOR_API_BASE_URL=https://api.challenge.fusefinance.com
      - VENDOR_API_KEY=nSbPbFJfe95BFZufiDwF32UhqZLEVQ5K4wdtJI2e
      # Email Configuration (usando Mailhog para desarrollo)
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_USER=test@example.com
      - SMTP_PASS=password
      - EMAIL_FROM=noreply@stocktrading.com
      - EMAIL_TO=reports@example.com
      # Service Configuration
      - DAILY_REPORT_SCHEDULE=0 9 * * *
      - MAX_PRICE_DEVIATION_PERCENT=2
      - CACHE_TTL_SECONDS=300
    restart: unless-stopped
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mailhog

  # Mailhog para testing de emails en desarrollo
  mailhog:
    image: mailhog/mailhog:latest
    container_name: stock-trading-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - stock-network
    logging:
      driver: "none"  # Desactivar logs verbosos de mailhog

networks:
  stock-network:
    driver: bridge

volumes:
  logs:
    driver: local